<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html lang="::LANG::" style="font-size:16px">

<head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" xml:lang="::LANG::" lang="::LANG::"/>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <meta charset="utf-8" />

    <!-- Meta Tags required for
       Progressive Web App -->
    <meta name="apple-mobile-web-app-status-bar" content="#aa7700" />
    <meta name="theme-color" content="black" />
 
    <!-- Manifest File link -->
    <link rel="manifest" href="/manifest.json" />

    <title>
        ::if pageTitle!=null::
        ::pageTitle::
        ::else::
        ::NAME::
        ::end::
    </title>

    <!-- Cagette CSS -->
    <link rel="stylesheet" type="text/css" href="/css/::getVariable('css')::/style.css" />

    <!-- BOOTSTRAP -->
    ::if noBootstrap::
    ::else::
    <link rel="stylesheet" href="/css/::getVariable('css')::/bootstrap.min.css" />
    ::end::

    <!-- Cagette very own icon font -->
    <link rel="stylesheet" href="/font/icons.css?v=::getVariable('css')::" />

    <!-- Leaflet CSS -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
        integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
        crossorigin="" />

    <!-- polyfill for IE11 : Object.assign() doesnt exists in IE11 , error in libs.prod.js -->
    <script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>

    <!-- Haxe JS + libs bundled with browserify -->
    <script type="text/javascript" src="/js/::getVariable('js')::/fetch.umd.js"></script>

    ::if(DEBUG)::
    <script type="text/javascript" src="/js/::getVariable('js')::/libs.dev.js"></script>
    ::else::
    <script type="text/javascript" src="/js/::getVariable('js')::/libs.prod.js"></script>
    ::end::
    <script type="text/javascript" src="/js/::getVariable('js')::/app.js"></script>
</head>

::if container==null:: ::set container="container":: ::end::

<body class="::container::">

    ::if DEBUG::
    <div style="position: fixed;background: #666;padding: 8px;left: 0;bottom:0;color:#FF0;">DEBUG ::session.lang::</div>
    ::end::

    ::if ( HOST.indexOf(".dev.",null)!=-1 || HOST.substr(0,3)=="pp." )::
    <div style="position: fixed;background: #600;padding: 8px;left:0;bottom:0;color: #FA0;width: 100%;z-index: 99;text-align: center;">
        <i class="icon icon-alert"></i> Ce site n'est pas le "vrai" site Cagette, c'est un site de test. <b>Ne l'utilisez surtout pas pour prendre de vraies commandes.</b>
    </div>
    ::end::

    <!-- Modal window -->
    <div class="modal" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span
                            aria-hidden="true">&times;</span></button>
                    <h2 class="modal-title" id="myModalLabel"></h2>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer" style="clear:both;">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <i class="icon icon-delete"></i> ::_("Close")::
                    </button>
                </div>
            </div>
        </div>
    </div>

    ::raw __content__::

    $$matomo()

    <script type="text/javascript">

        document.addEventListener("DOMContentLoaded", function (event) {
            //init vars in js App
            _Cagette.lang = "::session.lang::";
				:: if (user != null)::
                _Cagette.userId = :: user.id:: ;
            _Cagette.userName = "::user.getName()::";
            _Cagette.userEmail = "::user.email::";
				:: end::

				//tutorials
				:: if tuto != null::
                _Cagette.getTuto("::tuto.name::",:: tuto.step:: );			
				:: end::

            _Cagette.antiDoubleClick();
        })

			//tracking 24x7
        /*var rumMOKey='1d36c37d438ba069db210c73cb74308d';
        (function(){
            if(window.performance && window.performance.timing && window.performance.navigation) {
                var site24x7_rum_beacon=document.createElement('script');
                site24x7_rum_beacon.async=true;
                site24x7_rum_beacon.setAttribute('src','//static.site24x7rum.com/beacon/site24x7rum-min.js?appKey='+rumMOKey);
                document.getElementsByTagName('head')[0].appendChild(site24x7_rum_beacon);
            }
        })(window)*/

    </script>

    ::foreach script getNeoModuleScripts()::
    <script src="::script::"></script>
    ::end::

    <div style="margin-bottom: 32px; margin-left: 100px;">
        <button type="button" onclick="displayNotification()" >send notif</button>
    </div> 
    <script type="text/javascript">
        window.addEventListener('load', function() {
            registerSW();
        });
    
        // Register the Service Worker
        async function registerSW() {
            if ('serviceWorker' in navigator) {
                try {
                    await navigator
                            .serviceWorker
                            .register('/serviceworker.js');
                    }
                catch (e) {
                    console.log('SW registration failed', e);
                }
            }
        }

        Notification.requestPermission(function(status) {
            console.log('Notification permission status:', status);
        });


        function displayNotification() {
            if (Notification.permission == 'granted') {
                navigator.serviceWorker.getRegistration().then(function(reg) {
                    reg.showNotification('Hello world!');
                });
            }
        }
    </script>
</body>

</html>